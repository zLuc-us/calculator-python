# Importar a biblioteca de express√µes regulares
import re

# Fun√ß√£o para somar dois n√∫meros


def soma(number_one, number_two):
    return number_one + number_two

# Fun√ß√£o para subtrair dois n√∫meros


def subtrai(number_one, number_two):
    return number_one - number_two

# Fun√ß√£o para multiplicar dois n√∫meros


def multiplica(number_one, number_two):
    return number_one * number_two

# Fun√ß√£o para dividir dois n√∫meros


def divide(number_one, number_two):
    return number_one / number_two

# Fun√ß√£o para elevar um n√∫mero a uma pot√™ncia


def potencia(number_one, number_two):
    return number_one ** number_two

# Fun√ß√£o para calcular a raiz quadrada de um n√∫mero


def raiz_quadrada(number):
    return number ** 0.5

# Fun√ß√£o para calcular o fatorial de um n√∫mero


def fatorial(number):
    if number == 0:
        return 1
    else:
        return number * fatorial(number - 1)

# Fun√ß√£o principal da calculadora


def calculator():
    print("Bem-vindo √† [2;34mCalculadora[0m!")
    print("Digite '[2;34m[2;31mquit[0m[2;34m[0m' para sair")

    # Loop principal da calculadora
    while True:
        # Ler a express√£o matem√°tica do usu√°rio
        express = input("Digite uma express√£o matem√°tica: ")

        # Sair se o usu√°rio digitar 'quit'
        if express == 'quit':
            print("At√© a pr√≥xima!")
            return

        # Remover espa√ßos em branco da express√£o
        express = express.replace(" ", "")

        # Usar express√µes regulares para validar a express√£o
        if not re.match("^[\d+\-*/^()!]+$", express):
            print("[2;31mExpress√£o inv√°lida![0m")
            continue

        # Avaliar a express√£o matem√°tica
        try:
            result = eval(express)
            print("result: ", result)
        except ZeroDivisionError:
            print("Erro: [2;31mdivis√£o por zero![0m")
        except SyntaxError:
            print("[2;31mExpress√£o inv√°lida![0m")
        except:
            print("[2;31mOcorreu um erro inesperado![0m")


# Chamar a fun√ß√£o da calculator
calculator()
